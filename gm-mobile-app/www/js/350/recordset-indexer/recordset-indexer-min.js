YUI.add("recordset-indexer",function(b){function f(a){f.superclass.constructor.apply(this,arguments)}b.mix(f,{NS:"indexer",NAME:"recordsetIndexer",ATTRS:{hashTables:{value:{}},keys:{value:{}}}});b.extend(f,b.Plugin.Base,{initializer:function(){var a=this.get("host");this.onHostEvent("add",b.bind("_defAddHash",this),a);this.onHostEvent("remove",b.bind("_defRemoveHash",this),a);this.onHostEvent("update",b.bind("_defUpdateHash",this),a)},destructor:function(){},_setHashTable:function(a){for(var b=this.get("host"),
d={},c=0,g=b.getLength();c<g;c++)d[b._items[c].getValue(a)]=b._items[c];return d},_defAddHash:function(a){var e=this.get("hashTables");b.each(e,function(d,c){b.each(a.added||a.updated,function(a){a.getValue(c)&&(d[a.getValue(c)]=a)})})},_defRemoveHash:function(a){var e=this.get("hashTables"),d;b.each(e,function(c,e){b.each(a.removed||a.overwritten,function(a){(d=a.getValue(e))&&c[d]===a&&delete c[d]})})},_defUpdateHash:function(a){a.added=a.updated;a.removed=a.overwritten;this._defAddHash(a);this._defRemoveHash(a)},
createTable:function(a){var b=this.get("hashTables");b[a]=this._setHashTable(a);this.set("hashTables",b);return b[a]},getTable:function(a){return this.get("hashTables")[a]}});b.namespace("Plugin").RecordsetIndexer=f},"3.5.0",{requires:["recordset-base","plugin"]});
